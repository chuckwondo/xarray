name: CI Additional
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'pydata/xarray'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  detect-act:
    name: Detect 'act' runner
    runs-on: ubuntu-latest
    outputs:
      running: ${{ steps.detect-act.outputs.running }}
    steps:
      - id: detect-act
        run: echo "running=${{ env.ACT || 'false' }}" >> "$GITHUB_OUTPUT"

  doctest:
    name: Doctests
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'

    defaults:
      run:
        shell: bash -l {0}
    env:
      CONDA_ENV_FILE: ci/requirements/environment.yml
      PYTHON_VERSION: "3.12"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: set environment variables
        run: |
          echo "TODAY=$(date  +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{env.CONDA_ENV_FILE}}
          environment-name: xarray-tests
          create-args: >-
            python=${{env.PYTHON_VERSION}}
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"

      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          python xarray/util/print_versions.py
      - name: Run doctests
        run: |
          # Raise an error if there are warnings in the doctests, with `-Werror`.
          # This is a trial; if it presents an problem, feel free to remove.
          # See https://github.com/pydata/xarray/issues/7164 for more info.
          #
          # If dependencies emit warnings we can't do anything about, add ignores to
          # `xarray/tests/__init__.py`.
          python -m pytest --doctest-modules xarray --ignore xarray/tests -Werror

  mypy:
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            codecov-flags: mypy-min
          - python-version: "3.12"
            codecov-flags: mypy
    name: Mypy ${{ matrix.python-version }}
    runs-on: "ubuntu-latest"
    needs: [detect-ci-trigger, detect-act]
    if: always() && (needs.detect-ci-trigger.outputs.triggered == 'true' || needs.detect-act.outputs.running == 'true')
    defaults:
      run:
        shell: bash -l {0}
    env:
      CONDA_ENV_FILE: ci/requirements/environment.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: set environment variables
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{env.CONDA_ENV_FILE}}
          environment-name: xarray-tests
          create-args: >-
            python=${{env.PYTHON_VERSION}}
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          python xarray/util/print_versions.py
      - name: Install mypy
        run: |
          python -m pip install "mypy==1.15" pytest-mypy-plugins

      - name: Run mypy
        run: |
          python -m mypy --install-types --non-interactive --cobertura-xml-report mypy_report

      - name: Run mypy tests
        # Run pytest with mypy plugin even if mypy analysis in previous step fails.
        if: ${{ always() }}
        run: |
          python -m pytest -v --mypy-only-local-stub --mypy-pyproject-toml-file=pyproject.toml xarray/**/test_*.yml

      - name: Upload mypy coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          files: mypy_report/cobertura.xml
          flags: ${{ matrix.codecov-flags }}
          env_vars: PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

  pyright:
    name: Pyright
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: |
      always()
      && (
          contains( github.event.pull_request.labels.*.name, 'run-pyright')
      )
    defaults:
      run:
        shell: bash -l {0}
    env:
      CONDA_ENV_FILE: ci/requirements/environment.yml
      PYTHON_VERSION: "3.12"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: set environment variables
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{env.CONDA_ENV_FILE}}
          environment-name: xarray-tests
          create-args: >-
            python=${{env.PYTHON_VERSION}}
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          python xarray/util/print_versions.py
      - name: Install pyright
        run: |
          python -m pip install pyright --force-reinstall

      - name: Run pyright
        run: |
          python -m pyright xarray/

      - name: Upload pyright coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          file: pyright_report/cobertura.xml
          flags: pyright
          env_vars: PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

  pyright39:
    name: Pyright 3.10
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: |
      always()
      && (
          contains( github.event.pull_request.labels.*.name, 'run-pyright')
      )
    defaults:
      run:
        shell: bash -l {0}
    env:
      CONDA_ENV_FILE: ci/requirements/environment.yml
      PYTHON_VERSION: "3.10"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: set environment variables
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{env.CONDA_ENV_FILE}}
          environment-name: xarray-tests
          create-args: >-
            python=${{env.PYTHON_VERSION}}
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          python xarray/util/print_versions.py
      - name: Install pyright
        run: |
          python -m pip install pyright --force-reinstall

      - name: Run pyright
        run: |
          python -m pyright xarray/

      - name: Upload pyright coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          file: pyright_report/cobertura.xml
          flags: pyright39
          env_vars: PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

  min-version-policy:
    name: Minimum Version Policy
    runs-on: "ubuntu-latest"
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}

    env:
      COLUMNS: 120

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: xarray-tests
          create-args: >-
            python=3.12
            pyyaml
            python-dateutil
            cytoolz
            rich
            rich-click
            py-rattler

      - name: All-deps minimum versions policy
        run: |
          python ci/minimum_versions.py ci/requirements/min-all-deps.yml

      - name: Bare minimum versions policy
        run: |
          python ci/minimum_versions.py ci/requirements/bare-minimum.yml
